import{_ as a,c as s,o as l,ag as e}from"./chunks/framework.B-XtCDNB.js";const g=JSON.parse('{"title":"MongoDB入门","description":"","frontmatter":{},"headers":[],"relativePath":"Database/MongoDB入门.md","filePath":"Database/MongoDB入门.md"}'),n={name:"Database/MongoDB入门.md"};function t(h,i,o,d,p,r){return l(),s("div",null,[...i[0]||(i[0]=[e(`<h1 id="mongodb入门" tabindex="-1">MongoDB入门 <a class="header-anchor" href="#mongodb入门" aria-label="Permalink to &quot;MongoDB入门&quot;">​</a></h1><p>MongoDB是一个分布式文件存储的开源数据库。属于NoSQL，以BSON格式存储数据。</p><p>NoSQL是非关系型数据库</p><h2 id="mongodb的安装" tabindex="-1">MongoDB的安装 <a class="header-anchor" href="#mongodb的安装" aria-label="Permalink to &quot;MongoDB的安装&quot;">​</a></h2><h3 id="命令安装" tabindex="-1">命令安装 <a class="header-anchor" href="#命令安装" aria-label="Permalink to &quot;命令安装&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mongodb-org</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://docs.mongodb.com/manual/tutorial/install-mongodb-on-ubuntu/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`</span></span></code></pre></div><h3 id="源码安装" tabindex="-1">源码安装 <a class="header-anchor" href="#源码安装" aria-label="Permalink to &quot;源码安装&quot;">​</a></h3><ul><li><p>解压</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tar</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -zxvf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mongodb-linux-x86_64-ubuntu1604-3.4.0.tgz</span></span></code></pre></div></li><li><p>移动到/usr/local/目录下</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mv</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mongodb-linux-x86_64-ubuntu1604-3.4.0/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/local/mongodb</span></span></code></pre></div></li><li><p>将可执行文件添加到PATH路径中</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/usr/local/mongodb/bin:$PATH</span></span></code></pre></div></li></ul><h2 id="启动mongodb" tabindex="-1">启动MongoDB <a class="header-anchor" href="#启动mongodb" aria-label="Permalink to &quot;启动MongoDB&quot;">​</a></h2><h4 id="服务端mongodb的启动" tabindex="-1">服务端MongoDB的启动 <a class="header-anchor" href="#服务端mongodb的启动" aria-label="Permalink to &quot;服务端MongoDB的启动&quot;">​</a></h4><ul><li>查看帮助：mongod –help</li><li>启动：sudo service mongod start</li><li>停止：sudo service mongod stop</li><li>重启：sudo service mongod restart</li><li>查看是否启动成功：ps -ef|grep mongod</li><li>配置文件的位置：/etc/mongod.conf</li><li>默认端⼝：27017</li><li>日志的位置：/var/log/mongodb/mongod.log</li></ul><h3 id="客户端mongodb" tabindex="-1">客户端MongoDB <a class="header-anchor" href="#客户端mongodb" aria-label="Permalink to &quot;客户端MongoDB&quot;">​</a></h3><ul><li>启动本地客户端:mongo</li><li>查看帮助：mongo –help</li><li>退出：exit或者ctrl+c</li></ul><h3 id="服务端mongodb无法启动的解决方法" tabindex="-1">服务端MongoDB无法启动的解决方法 <a class="header-anchor" href="#服务端mongodb无法启动的解决方法" aria-label="Permalink to &quot;服务端MongoDB无法启动的解决方法&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mongod</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/mongod.conf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;</span></span></code></pre></div><h2 id="mongodb的基本使用" tabindex="-1">MongoDB的基本使用 <a class="header-anchor" href="#mongodb的基本使用" aria-label="Permalink to &quot;MongoDB的基本使用&quot;">​</a></h2><h3 id="mongodb数据库的命令" tabindex="-1">MongoDB数据库的命令 <a class="header-anchor" href="#mongodb数据库的命令" aria-label="Permalink to &quot;MongoDB数据库的命令&quot;">​</a></h3><ul><li>查看当前的数据库：db</li><li>查看所有的数据库：show dbs /show databases</li><li>切换数据库：use db_name</li><li>删除当前的数据库：db.dropDatabase()</li></ul><h3 id="mongodb集合的命令" tabindex="-1">MongoDB集合的命令 <a class="header-anchor" href="#mongodb集合的命令" aria-label="Permalink to &quot;MongoDB集合的命令&quot;">​</a></h3><ul><li>不手动创建集合： 向不存在的集合中第⼀次加⼊数据时， 集合会被创建出来</li><li>手动创建结合： <ul><li>db.createCollection(name,options)</li><li>db.createCollection(“stu”)</li><li>db.createCollection(“sub”, { capped : true, size : 10 } )</li><li>参数capped： 默认值为false表示不设置上限,值为true表示设置上限</li><li>参数size： 当capped值为true时， 需要指定此参数， 表示上限⼤⼩,当⽂档达到上限时， 会将之前的数据覆盖， 单位为字节</li></ul></li><li>查看集合：show collections</li><li>删除集合：db.集合名称.drop()</li></ul><h3 id="mongodb中常见的数据类型" tabindex="-1">MongoDB中常见的数据类型 <a class="header-anchor" href="#mongodb中常见的数据类型" aria-label="Permalink to &quot;MongoDB中常见的数据类型&quot;">​</a></h3><h4 id="常见类型" tabindex="-1">常见类型 <a class="header-anchor" href="#常见类型" aria-label="Permalink to &quot;常见类型&quot;">​</a></h4><ul><li>Object ID： ⽂档ID</li><li>String： 字符串， 最常⽤， 必须是有效的UTF-8</li><li>Boolean： 存储⼀个布尔值， true或false</li><li>Integer： 整数可以是32位或64位， 这取决于服务器</li><li>Double： 存储浮点值</li><li>Arrays： 数组或列表， 多个值存储到⼀个键</li><li>Object： ⽤于嵌⼊式的⽂档， 即⼀个值为⼀个⽂档</li><li>Null： 存储Null值</li><li>Timestamp： 时间戳， 表示从1970-1-1到现在的总秒数</li><li>Date： 存储当前⽇期或时间的UNIX时间格式</li></ul><h4 id="注意点" tabindex="-1">注意点 <a class="header-anchor" href="#注意点" aria-label="Permalink to &quot;注意点&quot;">​</a></h4><ul><li><p>创建⽇期语句如下 ：参数的格式为YYYY-MM-DD new Date(‘2017-12-20’)</p></li><li><p>每个⽂档都有⼀个属性， 为_id， 保证每个⽂档的唯⼀性</p><p>可以⾃⼰去设置_id插⼊⽂档，如果没有提供， 那么MongoDB为每个⽂档提供了⼀个独特的_id， 类型为objectID</p></li><li><p>objectID是⼀个12字节的⼗六进制数,每个字节两位，一共是24 位的字符串： 前4个字节为当前时间戳 接下来3个字节的机器ID 接下来的2个字节中MongoDB的服务进程id 最后3个字节是简单的增量值</p></li></ul><h3 id="mongodb的增删改查" tabindex="-1">MongoDB的增删改查 <a class="header-anchor" href="#mongodb的增删改查" aria-label="Permalink to &quot;MongoDB的增删改查&quot;">​</a></h3><h4 id="mongodb的插入" tabindex="-1">MongoDB的插入 <a class="header-anchor" href="#mongodb的插入" aria-label="Permalink to &quot;MongoDB的插入&quot;">​</a></h4><p>命令：<code>db.集合名称.insert(document)</code></p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">db</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">stu</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">insert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;gj&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,gender:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})  </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">db</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">stu</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">insert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({_id:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;20170101&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;gj&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,gender:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>插⼊⽂档时， 如果不指定_id参数， MongoDB会为⽂档分配⼀个唯⼀的ObjectId</p><h4 id="mongodb的保存" tabindex="-1">MongoDB的保存 <a class="header-anchor" href="#mongodb的保存" aria-label="Permalink to &quot;MongoDB的保存&quot;">​</a></h4><p>命令：<code>db.集合名称.save(document)</code> 如果⽂档的_id已经存在则修改， 如果⽂档的_id不存在则添加</p><h4 id="mongodb的简单查询" tabindex="-1">MongoDB的简单查询 <a class="header-anchor" href="#mongodb的简单查询" aria-label="Permalink to &quot;MongoDB的简单查询&quot;">​</a></h4><p>命令：<code>db.集合名称.find()</code></p><h4 id="mongodb的更新" tabindex="-1">MongoDB的更新 <a class="header-anchor" href="#mongodb的更新" aria-label="Permalink to &quot;MongoDB的更新&quot;">​</a></h4><p>命令：<code>db.集合名称.update(&lt;query&gt; ,&lt;update&gt;,{multi: &lt;boolean&gt;})</code></p><ul><li><p>参数query:查询条件</p></li><li><p>参数update:更新操作符</p></li><li><p>参数multi:可选， 默认是false，表示只更新找到的第⼀条记录， 值为true表示把满⾜条件的⽂档全部更新</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 更新一条 </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">db</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">stu</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">update</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hr&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;mnc&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 更新一条 </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">db</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">stu</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">update</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hr&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},{$</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hys&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}})</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 更新全部</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">db</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">stu</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">update</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({},{$</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:{gender:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}},{multi:true})</span></span></code></pre></div></li></ul><p>注意：“multi update only works with $ operators”</p><h4 id="mongodb的删除" tabindex="-1">MongoDB的删除 <a class="header-anchor" href="#mongodb的删除" aria-label="Permalink to &quot;MongoDB的删除&quot;">​</a></h4><p>命令：<code>db.集合名称.remove(&lt;query&gt;,{justOne: &lt;boolean&gt;})</code></p><ul><li>参数query:可选，删除的⽂档的条件</li><li>参数justOne:可选， 如果设为true或1， 则只删除⼀条， 默认false， 表示删除多条</li></ul><h3 id="mongodb的高级查询" tabindex="-1">MongoDB的高级查询 <a class="header-anchor" href="#mongodb的高级查询" aria-label="Permalink to &quot;MongoDB的高级查询&quot;">​</a></h3><h4 id="数据查询" tabindex="-1">数据查询 <a class="header-anchor" href="#数据查询" aria-label="Permalink to &quot;数据查询&quot;">​</a></h4><ul><li><p>⽅法find()： 查询</p><p><code>db.集合名称.find({条件⽂档})</code></p></li><li><p>⽅法findOne()：查询，只返回第⼀个</p><p><code>db.集合名称.findOne({条件⽂档})</code></p></li><li><p>⽅法pretty()： 将结果格式化</p><p><code>db.集合名称.find({条件⽂档}).pretty()</code></p></li></ul><h4 id="比较运算符" tabindex="-1">比较运算符 <a class="header-anchor" href="#比较运算符" aria-label="Permalink to &quot;比较运算符&quot;">​</a></h4><ul><li>等于： 默认是等于判断， 没有运算符</li><li>⼩于：<code>$lt （less than）</code></li><li>⼩于等于：<code>$lte （less than equal）</code></li><li>⼤于：<code>$gt （greater than）</code></li><li>⼤于等于：<code>$gte</code></li><li>不等于：<code>$ne</code></li></ul><h4 id="逻辑运算符" tabindex="-1">逻辑运算符 <a class="header-anchor" href="#逻辑运算符" aria-label="Permalink to &quot;逻辑运算符&quot;">​</a></h4><p>逻辑运算符主要指与、或逻辑</p><ul><li>and：在json中写多个条件即可</li><li>or:使⽤$or， 值为数组， 数组中每个元素为json</li></ul><h4 id="范围运算符" tabindex="-1">范围运算符 <a class="header-anchor" href="#范围运算符" aria-label="Permalink to &quot;范围运算符&quot;">​</a></h4><p>使⽤<code>$in</code>， <code>$nin</code> 判断数据是否在某个数组内</p><h4 id="支持正则表达式" tabindex="-1">⽀持正则表达式 <a class="header-anchor" href="#支持正则表达式" aria-label="Permalink to &quot;⽀持正则表达式&quot;">​</a></h4><p>使⽤//或$regex编写正则表达式</p><h4 id="skip和limit" tabindex="-1">skip和limit <a class="header-anchor" href="#skip和limit" aria-label="Permalink to &quot;skip和limit&quot;">​</a></h4><ul><li>⽅法limit()： ⽤于读取指定数量的⽂档</li><li>⽅法skip()： ⽤于跳过指定数量的⽂档</li></ul><p>注意：先使用skip在使用limit的效率要高于前者</p><h4 id="自定义查询" tabindex="-1">自定义查询 <a class="header-anchor" href="#自定义查询" aria-label="Permalink to &quot;自定义查询&quot;">​</a></h4><p>由于mongo的shell是一个js的执行环境 使⽤$where后⾯写⼀个函数， 返回满⾜条件的数据</p><h4 id="投影" tabindex="-1">投影 <a class="header-anchor" href="#投影" aria-label="Permalink to &quot;投影&quot;">​</a></h4><p>在查询到的返回结果中， 只选择必要的字段</p><p>命令：<code>db.集合名称.find({},{字段名称:1,...})</code></p><p>参数为字段与值， 值为1表示显示， 值为0不显 特别注意： 对于_id列默认是显示的， 如果不显示需要明确设置为0</p><h4 id="排序" tabindex="-1">排序 <a class="header-anchor" href="#排序" aria-label="Permalink to &quot;排序&quot;">​</a></h4><p>⽅法sort()， ⽤于对 集进⾏排序</p><p>命令：<code>db.集合名称.find().sort({字段:1,...})</code></p><p>参数1为升序排列 参数-1为降序排列</p><h4 id="统计个数" tabindex="-1">统计个数 <a class="header-anchor" href="#统计个数" aria-label="Permalink to &quot;统计个数&quot;">​</a></h4><p>⽅法count()⽤于统计结果集中⽂档条数</p><p>命令：<code>db.集合名称.find({条件}).count()</code> 命令：<code>db.集合名称.count({条件})</code></p><h4 id="消除重复" tabindex="-1">消除重复 <a class="header-anchor" href="#消除重复" aria-label="Permalink to &quot;消除重复&quot;">​</a></h4><p>⽅法<code>distinct()</code>对数据进⾏去重</p><p>命令：<code>db.集合名称.distinct(&#39;去重字段&#39;,{条件})</code></p>`,72)])])}const c=a(n,[["render",t]]);export{g as __pageData,c as default};
