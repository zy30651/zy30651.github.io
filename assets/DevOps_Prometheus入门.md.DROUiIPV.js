import{_ as a,c as i,o as t,ag as e}from"./chunks/framework.BmLMQRXF.js";const E=JSON.parse('{"title":"Prometheus入门","description":"","frontmatter":{},"headers":[],"relativePath":"DevOps/Prometheus入门.md","filePath":"DevOps/Prometheus入门.md"}'),n={name:"DevOps/Prometheus入门.md"};function l(h,s,p,d,r,o){return t(),i("div",null,s[0]||(s[0]=[e(`<h1 id="prometheus入门" tabindex="-1">Prometheus入门 <a class="header-anchor" href="#prometheus入门" aria-label="Permalink to &quot;Prometheus入门&quot;">​</a></h1><p>Prometheus是一款开源的系统监控和报警工具；</p><ul><li>多维度数据模型</li><li>强大的查询语言PromQL</li><li>支持多种数据采集方式，包括Pull模式</li></ul><h3 id="核心概念" tabindex="-1">核心概念 <a class="header-anchor" href="#核心概念" aria-label="Permalink to &quot;核心概念&quot;">​</a></h3><ul><li>Metric（指标）：用于度量系统状态的数据，例如CPU使用率、内存占用、请求数</li><li>Time Series（时间序列）：指标数据按照时间排序的序列，每个时间点包含一个值</li><li>Label（标签）：用于区分指标的维度信息，比如<code>instance=&quot;localhost:9090&quot;</code></li><li>Target（目标）：被Prometheus采集的监控对象，通常是一个服务或主机</li><li>Exporter（导出器）：将应用或系统内部指标转换成Prometheus可识别并提供HTTP接口的组件</li></ul><h3 id="快速安装部署" tabindex="-1">快速安装部署 <a class="header-anchor" href="#快速安装部署" aria-label="Permalink to &quot;快速安装部署&quot;">​</a></h3><p>docker-compose.yml</p><div class="language-yml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;3&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">services</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  prometheus</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">     image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">prom/prometheus:v2.26.0</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">     container_name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">prometheus</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">     ports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;9090:9090&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Prometheus Web 界面</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">     volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">./prometheus/data:/prometheus</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">     networks</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">kong-net</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  #  Grafana 服务</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  grafana</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">     image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">grafana/grafana:7.5.7</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">     container_name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">grafana</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">     ports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;3000:3000&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Grafana Web 界面</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">     environment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">GF_SECURITY_ADMIN_PASSWORD=admin</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">     depends_on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">prometheus</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">     volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">./grafana/data:/var/lib/grafana</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">     networks</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">kong-net</span></span></code></pre></div><h3 id="常用指标" tabindex="-1">常用指标 <a class="header-anchor" href="#常用指标" aria-label="Permalink to &quot;常用指标&quot;">​</a></h3><table tabindex="0"><thead><tr><th>指标名称</th><th>含义</th></tr></thead><tbody><tr><td><code>node_cpu_seconds_total</code></td><td>每个 CPU 核的使用时间（以秒计）</td></tr><tr><td><code>node_memory_MemAvailable_bytes</code></td><td>可用内存</td></tr><tr><td><code>node_memory_MemTotal_bytes</code></td><td>总内存</td></tr><tr><td><code>node_filesystem_size_bytes</code></td><td>文件系统总大小</td></tr><tr><td><code>node_network_receive_bytes_total</code></td><td>接收的网络字节总量</td></tr><tr><td><code>node_network_transmit_bytes_total</code></td><td>发送的网络字节总量</td></tr><tr><td><code>node_load1</code>, <code>node_load5</code>, <code>node_load15</code></td><td>系统负载</td></tr><tr><td><code>node_disk_io_time_seconds_total</code></td><td>磁盘 I/O 时间</td></tr></tbody></table><h3 id="grafana图表" tabindex="-1">Grafana图表 <a class="header-anchor" href="#grafana图表" aria-label="Permalink to &quot;Grafana图表&quot;">​</a></h3><h5 id="一、官方模板-适合服务器-nodeexporter" tabindex="-1">一、官方模板（适合服务器-NodeExporter） <a class="header-anchor" href="#一、官方模板-适合服务器-nodeexporter" aria-label="Permalink to &quot;一、官方模板（适合服务器-NodeExporter）&quot;">​</a></h5><ol><li><p>左侧菜单 → Dashboards → Import</p></li><li><p>输入 Node Exporter 的模板编号：<code>1860</code></p></li><li><p>选择数据源，点击 Import</p></li></ol><h5 id="二、手动创建" tabindex="-1">二、手动创建 <a class="header-anchor" href="#二、手动创建" aria-label="Permalink to &quot;二、手动创建&quot;">​</a></h5><ol><li><p>新建Dashboard-&gt;Add Panel</p></li><li><p>选择Metrics的某一项或者手动输入表达式</p><div class="language-promql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">promql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>rate(node_cpu_seconds_total{mode=&quot;user&quot;}[5m])</span></span></code></pre></div></li><li><p>设置图表类型</p></li><li><p>配置颜色</p></li></ol><h3 id="promql基本语法" tabindex="-1">PromQL基本语法 <a class="header-anchor" href="#promql基本语法" aria-label="Permalink to &quot;PromQL基本语法&quot;">​</a></h3><table tabindex="0"><thead><tr><th>目的</th><th>示例</th></tr></thead><tbody><tr><td>CPU 使用率</td><td><code>rate(node_cpu_seconds_total{mode!=&quot;idle&quot;}[5m])</code></td></tr><tr><td>内存使用率</td><td><code>(1 - node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes) * 100</code></td></tr><tr><td>网络入流量</td><td><code>rate(node_network_receive_bytes_total[5m])</code></td></tr><tr><td>磁盘使用率</td><td><code>(node_filesystem_size_bytes - node_filesystem_free_bytes) / node_filesystem_size_bytes * 100</code></td></tr><tr><td>系统负载</td><td><code>node_load1</code></td></tr></tbody></table>`,17)]))}const c=a(n,[["render",l]]);export{E as __pageData,c as default};
